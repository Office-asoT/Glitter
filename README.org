#+TITLE: @asot/glitter

An image gallery component like Lightbox for or Vue 2.x.

(日本語のREADMEは [[./README.jp.org][README.jp.org]] にあります。)

[[./images/example.gif]]

* Install

** Npm

#+begin_src shell
npm install @asot/glitter --save
#+end_src

You may install Glitter component globaly:

#+begin_src javascript
import Glitter from 'glitter';

Vue.component('glitter', Glitter);
#+end_src

Or you can register Glitter in your components:

#+begin_src javascript
import Glitter from 'glitter';

export default {
  ...
  components: {
    Glitter,
  },
  ...
};
#+end_src

** Browser

Include @asot/glitter in the page.

#+begin_src html
<script src="https://unpkg.com/vue"></script>
<script src="https://unpkg.com/asot/glitter/dist/Glitter.umd.min.js"></script>

<link rel="stylesheet" href="https://unpkg.com/asot/glitter/dist//Glitter.css">

<script>
// Global Registration
Vue.component('glitter', Glitter);

// Local Registration
new Vue({
  components: {
    glitter: Glitter
  }
})
</script>
#+end_src

* Usage

You may now use Glitter component in your markup:

#+begin_src html
<glitter
  v-bind:images="[
    '/path/to/image',
    { src: '/path/to/image', caption: 'Hello glitter' },
  ]"
  <p>
    You can write arbitrary markup.<br />
    Here will be rendered as top.
  </p>
</glitter>
#+end_src

** API

*** images: Array<string | { src: string, caption: string }>

Required, an array of image urls. You can specify a caption as well in object notation.

*** showPageNumbers: boolean

Display page numbers (default to =true=).

*** showCloseButton: boolean

Display a close button (default to =true=).

*** showLoading: boolean

Display loding image (default to =true=).

*** showLoadingProgress: boolean

Display loading progress (default to =true=).

*** repeatImages: boolean

Repeat images (default to =false=).

** Development

You need [[https://cli.vuejs.org/][Vue Cli]].

*** Project setup

#+begin_src shell
npm install
#+end_src

*** Compiles and hot-reloads for development

#+begin_src shell
npm run serve
#+end_src

*** Compiles and minifies for production

#+begin_src shell
npm run build
#+end_src

*** Run unit tests

#+begin_src shell
npm run test:unit
#+end_src

*** Lints files

#+begin_src shell
npm run lint
#+end_src
